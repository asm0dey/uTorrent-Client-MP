/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.asm0dey.utorrentaccess.gui;

import java.io.IOException;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.util.Lookup.Result;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;
import org.openide.windows.TopComponent;
import ru.asm0dey.utorrentaccess.utorrentclient.UTorrent;
import ru.asm0dey.utorrentaccess.utorrentclient.domain.FilesRequestResult;
import ru.asm0dey.utorrentaccess.utorrentclient.domain.SingleListTorrent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
    dtd = "-//ru.asm0dey.utorrentaccess.gui//TorrentInfo//EN",
autostore = false)
@TopComponent.Description(
    preferredID = "TorrentInfoTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "output", openAtStartup = true)
@ActionID(category = "Window", id = "ru.asm0dey.utorrentaccess.gui.TorrentInfoTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_TorrentInfoAction",
preferredID = "TorrentInfoTopComponent")
@Messages({
    "CTL_TorrentInfoAction=TorrentInfo",
    "CTL_TorrentInfoTopComponent=TorrentInfo Window",
    "HINT_TorrentInfoTopComponent=This is a TorrentInfo window"
})
public final class TorrentInfoTopComponent extends TopComponent implements LookupListener {

    private Result<SingleListTorrent> lookupResult;

    public TorrentInfoTopComponent() {
        initComponents();
        setName(Bundle.CTL_TorrentInfoTopComponent());
        setToolTipText(Bundle.HINT_TorrentInfoTopComponent());
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_DRAGGING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_SLIDING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_KEEP_PREFERRED_SIZE_WHEN_SLIDED_IN, Boolean.TRUE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setViewportView(jTextPane1);

        add(jScrollPane1);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void componentOpened() {
        lookupResult = Utilities.actionsGlobalContext().lookupResult(SingleListTorrent.class);
        lookupResult.addLookupListener(this);
    }

    @Override
    public void componentClosed() {
        lookupResult.removeLookupListener(this);
    }

    @Override
    public void resultChanged(LookupEvent ev) {
        final Class<? extends LookupEvent> aClass = ev.getClass();
        StringBuilder builder = new StringBuilder();
        for (SingleListTorrent filesRequestResult : lookupResult.allInstances()) {
            try {
                final UTorrent instance = UTorrent.getInstance("192.168.1.2", 8080, "admin", "");
                instance.getFilesByTorrentHash(filesRequestResult.getHash());
                builder.append("\n").append(filesRequestResult.toString());
            } catch (IOException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
        jTextPane1.setText(builder.toString());
    }
}
